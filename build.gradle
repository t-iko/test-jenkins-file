/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * Learn how to create Gradle builds at https://guides.gradle.org/creating-new-gradle-builds
 */
plugins {
    // Apply the java-library plugin to add support for Java Library
    id 'java-library'
    id 'java'
    id "org.hidetake.ssh" version "2.10.1"
}

remotes {
  webServer1 {
    host = '172.31.40.120'
    user = 'ec2-user'
    identity = file('../new_keypair.pem')
  }
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:23.0'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
}

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

task helo{
    doLast {
        def total = 0;
        for (def i in 1..num.toInteger()) {
            total += i;
        }
        println("total: " + total);

    }
    
}


//インスタンスに指定のユーザーが存在するかチェックするタスク
task idCheck {
  doLast {    
    ssh.run {
      session(remotes.webServer1) {
          println 'command: sudo cut -d: -f1 /etc/passwd | grep '+user
          try{
              def result = execute("sudo cut -d: -f1 /etc/passwd | grep -x ${user}")
              println 'result: '+result
              println user+' user is present'
          }catch(Exception e){
              println user+' user is not present' 
              return []
          }
      }
    }
  }
}

//インスタンスに指定のユーザーを作成するタスク
task createUser {
  doLast {
    ssh.run {
      session(remotes.webServer1) {
          println 'command: sudo cut -d: -f1 /etc/passwd | grep '+user
          try{
              def result = execute("sudo useradd ${user}")
              println 'result: '+result
              println user+' user is created'
          }catch(Exception e){
              println "user is not created"
              return []
          }
      }
    }
  }
}